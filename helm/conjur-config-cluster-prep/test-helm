#!/bin/bash
#
# Run a Kubernetes cluster prep Helm chart Helm test to validate
# an installed chart release.
#
# Example: Run test without authentication with a Conjur instance:
#     ./test-helm -r my-test-release
#
# Example: Run test including authentication with a Conjur instance:
#     ./test-helm -r my-test-release -a -v "validator"

source ../common/utils.sh

print_usage() {
  echo "Usage:"
  echo "    This script will test the Helm release"
  echo ""
  echo "Syntax:"
  echo "    $0 [Options]"
  echo "    Options:"
  echo "    -a            Test authentication with Conjur instance"
  echo "    -h            Show help"
  echo "    -r <release>  Specify the Helm release"
  echo "                  (defaults to 'authn-k8s')"
  echo "    -v <host-ID>  Specify validator host ID to use for testing"
  echo "                  authentication (defaults to 'validator')"
}

helm_release="authn-k8s"
test_authentication=false
validator_id="validator"
test_timeout="10s"

function main() {
  # Process command line options
  local OPTIND
  while getopts ':ahr:v:' flag; do
    case "${flag}" in
      a) test_authentication=true ;;
      h) print_usage; exit 0 ;;
      r) helm_release=${OPTARG} ;;
      v) validator_id=${OPTARG} ;;
      *) echo "Invalid argument -${OPTARG}" >&2; echo; print_usage ; exit 1;;
    esac
  done
  shift $((OPTIND-1))

  kubectl delete pod -l "app=cluster-prep-test" --ignore-not-found
  helm upgrade "$helm_release" . \
      --reuse-values \
      --set test.authentication.enable="$test_authentication" \
      --set test.authentication.validatorID="$validator_id" \
      --set test.authentication.debug=true

  announce "Running Helm test"
  if "$test_authentication"; then
    # Run with a timeout, since authenticator sidecar will run indefinitely.
    # Also, the Helm test '--logs' option does not work if there are
    # multiple containers in the test Pod.
    helm test "$helm_release" --timeout "$test_timeout"
    announce "Retrieving Conjur authenticator container logs"
    kubectl logs "$helm_release"-cluster-prep-test authenticator
    announce "Retrieving BATS tester logs"
    kubectl logs "$helm_release"-cluster-prep-test tester
  else
    helm test "$helm_release" --logs
  fi
}

main "$@"
